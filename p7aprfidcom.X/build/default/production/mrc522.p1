Version 4.0 HI-TECH Software Intermediate Code
"172 /opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 172:     struct {
[s S10 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S10 . RA0 RA1 RA2 RA3 RA4 RA5 RA6 RA7 ]
"171
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 171: typedef union {
[u S9 `S10 1 ]
[n S9 . . ]
"183
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 183: extern volatile PORTAbits_t PORTAbits __attribute__((address(0x005)));
[v _PORTAbits `VS9 ~T0 @X0 0 e@5 ]
"8 ./spi.h
[; ;./spi.h: 8: void SPIWrite(uint8_t data);
[v _SPIWrite `(v ~T0 @X0 0 ef1`uc ]
"9
[; ;./spi.h: 9: uint8_t SPIRead(void);
[v _SPIRead `(uc ~T0 @X0 0 ef ]
"1422 /opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1422:     struct {
[s S57 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S57 . TRISA0 TRISA1 TRISA2 TRISA3 TRISA4 TRISA5 TRISA6 TRISA7 ]
"1421
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1421: typedef union {
[u S56 `S57 1 ]
[n S56 . . ]
"1433
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1433: extern volatile TRISAbits_t TRISAbits __attribute__((address(0x085)));
[v _TRISAbits `VS56 ~T0 @X0 0 e@133 ]
"8 /opt/microchip/xc8/v2.50/pic/include/builtins.h
[v ___nop `(v ~T0 @X0 0 ef ]
[p i ___nop ]
"54 /opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 354: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"416
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 416: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"454
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 454: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"461
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 461: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"539
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 539: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"595
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 595: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"652
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 652: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"659
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 659: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"666
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 666: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"673
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 673: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"767
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 767: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"774
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 774: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"845
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 845: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"852
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 852: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"922
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 922: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"929
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 929: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"936
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 936: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"943
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 943: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"1040
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1040: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1135
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1135: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1142
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1142: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1149
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1149: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1156
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1156: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1163
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1163: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1170
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1170: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1240
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1240: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1247
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1247: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1348
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1348: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1418
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1418: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1480
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1480: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1542
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1542: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1604
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1604: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1666
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1666: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1704
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1704: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1760
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1760: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1817
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1817: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1864
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1864: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1929
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1929: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1981
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 1981: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"2043
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2043: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"2050
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2050: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"2057
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2057: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"2062
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2062: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2179
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2179: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2348
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2348: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2418
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2418: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2488
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2488: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2558
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2558: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2644
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2644: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2706
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2706: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2776
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2776: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2846
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2846: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2928
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2928: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2972
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2972: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2979
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 2979: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"3013
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 3013: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"3066
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 3066: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"3131
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 3131: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3196
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 3196: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3247
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 3247: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3252
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 3252: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3259
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 3259: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3266
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 3266: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3273
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 3273: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3280
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 3280: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3337
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 3337: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3389
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 3389: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3451
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 3451: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3501
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 3501: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3546
[; ;/opt/microchip/mplabx/v6.20/packs/Microchip/PIC16Fxxx_DFP/1.6.156/xc8/pic/include/proc/pic16f887.h: 3546: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"21 mrc522.c
[; ;mrc522.c: 21: uint8_t MRCReadReg(uint8_t addr)
[v _MRCReadReg `(uc ~T0 @X0 1 ef1`uc ]
"22
[; ;mrc522.c: 22: {
{
[e :U _MRCReadReg ]
"21
[; ;mrc522.c: 21: uint8_t MRCReadReg(uint8_t addr)
[v _addr `uc ~T0 @X0 1 r1 ]
"22
[; ;mrc522.c: 22: {
[f ]
"23
[; ;mrc522.c: 23:    uint8_t data;
[v _data `uc ~T0 @X0 1 a ]
"24
[; ;mrc522.c: 24:    PORTAbits.RA5 = 0;
[e = . . _PORTAbits 0 5 -> -> 0 `i `uc ]
"25
[; ;mrc522.c: 25:    SPIWrite((( addr << 1 ) & 0x7E) | 0x80 );
[e ( _SPIWrite (1 -> | & << -> _addr `i -> 1 `i -> 126 `i -> 128 `i `uc ]
"26
[; ;mrc522.c: 26:    data = SPIRead();
[e = _data ( _SPIRead ..  ]
"27
[; ;mrc522.c: 27:    PORTAbits.RA5 = 1;
[e = . . _PORTAbits 0 5 -> -> 1 `i `uc ]
"28
[; ;mrc522.c: 28:    return data;
[e ) _data ]
[e $UE 142  ]
"29
[; ;mrc522.c: 29: }
[e :UE 142 ]
}
"35
[; ;mrc522.c: 35: void MRCWriteReg(uint8_t addr, uint8_t data)
[v _MRCWriteReg `(v ~T0 @X0 1 ef2`uc`uc ]
"36
[; ;mrc522.c: 36: {
{
[e :U _MRCWriteReg ]
"35
[; ;mrc522.c: 35: void MRCWriteReg(uint8_t addr, uint8_t data)
[v _addr `uc ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
"36
[; ;mrc522.c: 36: {
[f ]
"37
[; ;mrc522.c: 37:    PORTAbits.RA5 = 0;
[e = . . _PORTAbits 0 5 -> -> 0 `i `uc ]
"38
[; ;mrc522.c: 38:    SPIWrite((addr << 1) & 0x7E);
[e ( _SPIWrite (1 -> & << -> _addr `i -> 1 `i -> 126 `i `uc ]
"39
[; ;mrc522.c: 39:    SPIWrite(data);
[e ( _SPIWrite (1 _data ]
"40
[; ;mrc522.c: 40:    PORTAbits.RA5 = 1;
[e = . . _PORTAbits 0 5 -> -> 1 `i `uc ]
"41
[; ;mrc522.c: 41: }
[e :UE 143 ]
}
"46
[; ;mrc522.c: 46: void MRCClearBit(uint8_t addr, uint8_t mask)
[v _MRCClearBit `(v ~T0 @X0 1 ef2`uc`uc ]
"47
[; ;mrc522.c: 47: {
{
[e :U _MRCClearBit ]
"46
[; ;mrc522.c: 46: void MRCClearBit(uint8_t addr, uint8_t mask)
[v _addr `uc ~T0 @X0 1 r1 ]
[v _mask `uc ~T0 @X0 1 r2 ]
"47
[; ;mrc522.c: 47: {
[f ]
"48
[; ;mrc522.c: 48:     uint8_t data;
[v _data `uc ~T0 @X0 1 a ]
"49
[; ;mrc522.c: 49:     data = MRCReadReg(addr) ;
[e = _data ( _MRCReadReg (1 _addr ]
"50
[; ;mrc522.c: 50:     MRCWriteReg(addr, data&~mask);
[e ( _MRCWriteReg (2 , _addr -> & -> _data `i ~ -> _mask `i `uc ]
"51
[; ;mrc522.c: 51: }
[e :UE 144 ]
}
"56
[; ;mrc522.c: 56: void MRCSetBit(uint8_t addr, uint8_t mask)
[v _MRCSetBit `(v ~T0 @X0 1 ef2`uc`uc ]
"57
[; ;mrc522.c: 57: { uint8_t data;
{
[e :U _MRCSetBit ]
"56
[; ;mrc522.c: 56: void MRCSetBit(uint8_t addr, uint8_t mask)
[v _addr `uc ~T0 @X0 1 r1 ]
[v _mask `uc ~T0 @X0 1 r2 ]
"57
[; ;mrc522.c: 57: { uint8_t data;
[f ]
[v _data `uc ~T0 @X0 1 a ]
"58
[; ;mrc522.c: 58:      data = MRCReadReg(addr) ;
[e = _data ( _MRCReadReg (1 _addr ]
"59
[; ;mrc522.c: 59:      MRCWriteReg(addr, data|mask );
[e ( _MRCWriteReg (2 , _addr -> | -> _data `i -> _mask `i `uc ]
"60
[; ;mrc522.c: 60: }
[e :UE 145 ]
}
"67
[; ;mrc522.c: 67: uint8_t MRCToCard(uint8_t cmd, uint8_t *src, uint8_t slen, uint8_t *dst, unsigned *dlen)
[v _MRCToCard `(uc ~T0 @X0 1 ef5`uc`*uc`uc`*uc`*ui ]
"68
[; ;mrc522.c: 68: {
{
[e :U _MRCToCard ]
"67
[; ;mrc522.c: 67: uint8_t MRCToCard(uint8_t cmd, uint8_t *src, uint8_t slen, uint8_t *dst, unsigned *dlen)
[v _cmd `uc ~T0 @X0 1 r1 ]
[v _src `*uc ~T0 @X0 1 r2 ]
[v _slen `uc ~T0 @X0 1 r3 ]
[v _dst `*uc ~T0 @X0 1 r4 ]
[v _dlen `*ui ~T0 @X0 1 r5 ]
"68
[; ;mrc522.c: 68: {
[f ]
"69
[; ;mrc522.c: 69:     uint8_t status = 2;
[v _status `uc ~T0 @X0 1 a ]
[e = _status -> -> 2 `i `uc ]
"70
[; ;mrc522.c: 70:     uint8_t irqEn = 0x00;
[v _irqEn `uc ~T0 @X0 1 a ]
[e = _irqEn -> -> 0 `i `uc ]
"71
[; ;mrc522.c: 71:     uint8_t waitIRq = 0x00;
[v _waitIRq `uc ~T0 @X0 1 a ]
[e = _waitIRq -> -> 0 `i `uc ]
"72
[; ;mrc522.c: 72:     uint8_t lastBits;
[v _lastBits `uc ~T0 @X0 1 a ]
"73
[; ;mrc522.c: 73:     uint8_t n;
[v _n `uc ~T0 @X0 1 a ]
"74
[; ;mrc522.c: 74:     unsigned i;
[v _i `ui ~T0 @X0 1 a ]
"75
[; ;mrc522.c: 75:     switch (cmd)
[e $U 148  ]
"76
[; ;mrc522.c: 76:     {
{
"77
[; ;mrc522.c: 77:         case 0x0E:
[e :U 149 ]
"78
[; ;mrc522.c: 78:         {
{
"79
[; ;mrc522.c: 79:             irqEn = 0x12;
[e = _irqEn -> -> 18 `i `uc ]
"80
[; ;mrc522.c: 80:             waitIRq = 0x10;
[e = _waitIRq -> -> 16 `i `uc ]
"81
[; ;mrc522.c: 81:         } break;
}
[e $U 147  ]
"82
[; ;mrc522.c: 82:         case 0x0C:
[e :U 150 ]
"83
[; ;mrc522.c: 83:         {
{
"84
[; ;mrc522.c: 84:             irqEn = 0x77;
[e = _irqEn -> -> 119 `i `uc ]
"85
[; ;mrc522.c: 85:             waitIRq = 0x30;
[e = _waitIRq -> -> 48 `i `uc ]
"86
[; ;mrc522.c: 86:         } break;
}
[e $U 147  ]
"87
[; ;mrc522.c: 87:         default:
[e :U 151 ]
"88
[; ;mrc522.c: 88:             break;
[e $U 147  ]
"89
[; ;mrc522.c: 89:     }
}
[e $U 147  ]
[e :U 148 ]
[e [\ _cmd , $ -> 14 `i 149
 , $ -> 12 `i 150
 151 ]
[e :U 147 ]
"90
[; ;mrc522.c: 90:     MRCWriteReg(0x02, irqEn | 0x80);
[e ( _MRCWriteReg (2 , -> -> 2 `i `uc -> | -> _irqEn `i -> 128 `i `uc ]
"91
[; ;mrc522.c: 91:     MRCClearBit(0x04, 0x80);
[e ( _MRCClearBit (2 , -> -> 4 `i `uc -> -> 128 `i `uc ]
"92
[; ;mrc522.c: 92:     MRCSetBit(0x0A, 0x80);
[e ( _MRCSetBit (2 , -> -> 10 `i `uc -> -> 128 `i `uc ]
"93
[; ;mrc522.c: 93:     MRCWriteReg(0x01, 0x00);
[e ( _MRCWriteReg (2 , -> -> 1 `i `uc -> -> 0 `i `uc ]
"94
[; ;mrc522.c: 94:     for(i=0; i < slen; i++)
{
[e = _i -> -> 0 `i `ui ]
[e $U 155  ]
[e :U 152 ]
"95
[; ;mrc522.c: 95:         MRCWriteReg( 0x09, src[i] );
[e ( _MRCWriteReg (2 , -> -> 9 `i `uc *U + _src * -> _i `ux -> -> # *U _src `ui `ux ]
[e ++ _i -> -> 1 `i `ui ]
[e :U 155 ]
[e $ < _i -> _slen `ui 152  ]
[e :U 153 ]
}
"96
[; ;mrc522.c: 96:     MRCWriteReg(0x01, cmd);
[e ( _MRCWriteReg (2 , -> -> 1 `i `uc _cmd ]
"97
[; ;mrc522.c: 97:     if(cmd == 0x0C)
[e $ ! == -> _cmd `i -> 12 `i 156  ]
"98
[; ;mrc522.c: 98:        MRCSetBit(0x0D, 0x80);
[e ( _MRCSetBit (2 , -> -> 13 `i `uc -> -> 128 `i `uc ]
[e :U 156 ]
"100
[; ;mrc522.c: 100:     i = 2000;
[e = _i -> -> 2000 `i `ui ]
"101
[; ;mrc522.c: 101:     do
[e :U 159 ]
"102
[; ;mrc522.c: 102:     {
{
"103
[; ;mrc522.c: 103:         n = MRCReadReg(0x04);
[e = _n ( _MRCReadReg (1 -> -> 4 `i `uc ]
"104
[; ;mrc522.c: 104:         i--;
[e -- _i -> -> 1 `i `ui ]
"105
[; ;mrc522.c: 105:     }
}
[e $ && && != _i -> -> 0 `i `ui ! != & -> _n `i -> 1 `i -> 0 `i ! != & -> _n `i -> _waitIRq `i -> 0 `i 159  ]
[e :U 158 ]
"107
[; ;mrc522.c: 107:     MRCClearBit(0x0D, 0x80);
[e ( _MRCClearBit (2 , -> -> 13 `i `uc -> -> 128 `i `uc ]
"108
[; ;mrc522.c: 108:     if (i != 0)
[e $ ! != _i -> -> 0 `i `ui 160  ]
"109
[; ;mrc522.c: 109:     {
{
"110
[; ;mrc522.c: 110:         if( !(MRCReadReg(0x06) & 0x1B ))
[e $ ! ! != & -> ( _MRCReadReg (1 -> -> 6 `i `uc `i -> 27 `i -> 0 `i 161  ]
"111
[; ;mrc522.c: 111:         {
{
"112
[; ;mrc522.c: 112:             status = 0;
[e = _status -> -> 0 `i `uc ]
"113
[; ;mrc522.c: 113:             if ( n & irqEn & 0x01 )
[e $ ! != & & -> _n `i -> _irqEn `i -> 1 `i -> 0 `i 162  ]
"114
[; ;mrc522.c: 114:                 status = 1;
[e = _status -> -> 1 `i `uc ]
[e :U 162 ]
"115
[; ;mrc522.c: 115:             if (cmd == 0x0C)
[e $ ! == -> _cmd `i -> 12 `i 163  ]
"116
[; ;mrc522.c: 116:             {
{
"117
[; ;mrc522.c: 117:                 n = MRCReadReg(0x0A);
[e = _n ( _MRCReadReg (1 -> -> 10 `i `uc ]
"118
[; ;mrc522.c: 118:                 lastBits = MRCReadReg(0x0C) & 0x07;
[e = _lastBits -> & -> ( _MRCReadReg (1 -> -> 12 `i `uc `i -> 7 `i `uc ]
"119
[; ;mrc522.c: 119:                 if (lastBits)
[e $ ! != -> _lastBits `i -> 0 `i 164  ]
"120
[; ;mrc522.c: 120:                     *dlen = (n-1) * 8 + lastBits;
[e = *U _dlen -> + * - -> _n `i -> 1 `i -> 8 `i -> _lastBits `i `ui ]
[e $U 165  ]
"121
[; ;mrc522.c: 121:                 else
[e :U 164 ]
"122
[; ;mrc522.c: 122:                     *dlen = n * 8;
[e = *U _dlen -> * -> _n `i -> 8 `i `ui ]
[e :U 165 ]
"123
[; ;mrc522.c: 123:                 if (n == 0)
[e $ ! == -> _n `i -> 0 `i 166  ]
"124
[; ;mrc522.c: 124:                     n = 1;
[e = _n -> -> 1 `i `uc ]
[e :U 166 ]
"125
[; ;mrc522.c: 125:                 if (n > 16)
[e $ ! > -> _n `i -> 16 `i 167  ]
"126
[; ;mrc522.c: 126:                     n = 16;
[e = _n -> -> 16 `i `uc ]
[e :U 167 ]
"127
[; ;mrc522.c: 127:                 for (i=0; i < n; i++)
{
[e = _i -> -> 0 `i `ui ]
[e $U 171  ]
[e :U 168 ]
"128
[; ;mrc522.c: 128:                     dst[i] = MRCReadReg(0x09);
[e = *U + _dst * -> _i `ux -> -> # *U _dst `ui `ux ( _MRCReadReg (1 -> -> 9 `i `uc ]
[e ++ _i -> -> 1 `i `ui ]
[e :U 171 ]
[e $ < _i -> _n `ui 168  ]
[e :U 169 ]
}
"129
[; ;mrc522.c: 129:                 dst[i] = 0;
[e = *U + _dst * -> _i `ux -> -> # *U _dst `ui `ux -> -> 0 `i `uc ]
"130
[; ;mrc522.c: 130:             }
}
[e :U 163 ]
"131
[; ;mrc522.c: 131:         }
}
[e $U 172  ]
"132
[; ;mrc522.c: 132:         else
[e :U 161 ]
"133
[; ;mrc522.c: 133:             status = 2;
[e = _status -> -> 2 `i `uc ]
[e :U 172 ]
"134
[; ;mrc522.c: 134:     }
}
[e :U 160 ]
"135
[; ;mrc522.c: 135:     return status;
[e ) _status ]
[e $UE 146  ]
"136
[; ;mrc522.c: 136: }
[e :UE 146 ]
}
"142
[; ;mrc522.c: 142: void MRCRunCRC(uint8_t *src, uint8_t len, uint8_t *dst)
[v _MRCRunCRC `(v ~T0 @X0 1 ef3`*uc`uc`*uc ]
"143
[; ;mrc522.c: 143: {
{
[e :U _MRCRunCRC ]
"142
[; ;mrc522.c: 142: void MRCRunCRC(uint8_t *src, uint8_t len, uint8_t *dst)
[v _src `*uc ~T0 @X0 1 r1 ]
[v _len `uc ~T0 @X0 1 r2 ]
[v _dst `*uc ~T0 @X0 1 r3 ]
"143
[; ;mrc522.c: 143: {
[f ]
"144
[; ;mrc522.c: 144:     uint8_t i, n;
[v _i `uc ~T0 @X0 1 a ]
[v _n `uc ~T0 @X0 1 a ]
"145
[; ;mrc522.c: 145:     MRCClearBit(0x05, 0x04);
[e ( _MRCClearBit (2 , -> -> 5 `i `uc -> -> 4 `i `uc ]
"146
[; ;mrc522.c: 146:     MRCSetBit(0x0A, 0x80);
[e ( _MRCSetBit (2 , -> -> 10 `i `uc -> -> 128 `i `uc ]
"147
[; ;mrc522.c: 147:     for ( i = 0; i < len; i++ )
{
[e = _i -> -> 0 `i `uc ]
[e $U 177  ]
[e :U 174 ]
"148
[; ;mrc522.c: 148:         MRCWriteReg(0x09, *src++);
[e ( _MRCWriteReg (2 , -> -> 9 `i `uc *U ++ _src * -> -> 1 `i `x -> -> # *U _src `i `x ]
[e ++ _i -> -> 1 `i `uc ]
[e :U 177 ]
[e $ < -> _i `i -> _len `i 174  ]
[e :U 175 ]
}
"149
[; ;mrc522.c: 149:     MRCWriteReg(0x01, 0x03);
[e ( _MRCWriteReg (2 , -> -> 1 `i `uc -> -> 3 `i `uc ]
"150
[; ;mrc522.c: 150:     i = 0xFF;
[e = _i -> -> 255 `i `uc ]
"151
[; ;mrc522.c: 151:     do
[e :U 180 ]
"152
[; ;mrc522.c: 152:     {
{
"153
[; ;mrc522.c: 153:         n = MRCReadReg(0x05);
[e = _n ( _MRCReadReg (1 -> -> 5 `i `uc ]
"154
[; ;mrc522.c: 154:         i--;
[e -- _i -> -> 1 `i `uc ]
"155
[; ;mrc522.c: 155:     }
}
[e $ && != -> _i `i -> 0 `i ! != & -> _n `i -> 4 `i -> 0 `i 180  ]
[e :U 179 ]
"157
[; ;mrc522.c: 157:     dst[0] = MRCReadReg(0x22);
[e = *U + _dst * -> -> 0 `i `x -> -> # *U _dst `i `x ( _MRCReadReg (1 -> -> 34 `i `uc ]
"158
[; ;mrc522.c: 158:     dst[1] = MRCReadReg(0x21);
[e = *U + _dst * -> -> 1 `i `x -> -> # *U _dst `i `x ( _MRCReadReg (1 -> -> 33 `i `uc ]
"159
[; ;mrc522.c: 159: }
[e :UE 173 ]
}
"166
[; ;mrc522.c: 166: uint8_t MRCRead(uint8_t baddr, uint8_t *dst)
[v _MRCRead `(uc ~T0 @X0 1 ef2`uc`*uc ]
"167
[; ;mrc522.c: 167: {
{
[e :U _MRCRead ]
"166
[; ;mrc522.c: 166: uint8_t MRCRead(uint8_t baddr, uint8_t *dst)
[v _baddr `uc ~T0 @X0 1 r1 ]
[v _dst `*uc ~T0 @X0 1 r2 ]
"167
[; ;mrc522.c: 167: {
[f ]
"168
[; ;mrc522.c: 168:     uint8_t status;
[v _status `uc ~T0 @X0 1 a ]
"169
[; ;mrc522.c: 169:     unsigned len;
[v _len `ui ~T0 @X0 1 a ]
"170
[; ;mrc522.c: 170:     dst[0] = 0x30;
[e = *U + _dst * -> -> 0 `i `x -> -> # *U _dst `i `x -> -> 48 `i `uc ]
"171
[; ;mrc522.c: 171:     dst[1] = baddr;
[e = *U + _dst * -> -> 1 `i `x -> -> # *U _dst `i `x _baddr ]
"172
[; ;mrc522.c: 172:     MRCRunCRC(dst,2, &dst[2]);
[e ( _MRCRunCRC (3 , , _dst -> -> 2 `i `uc &U *U + _dst * -> -> 2 `i `x -> -> # *U _dst `i `x ]
"173
[; ;mrc522.c: 173:     status = MRCToCard(0x0C, dst, 4, dst, &len);
[e = _status ( _MRCToCard (4 , , , , -> -> 12 `i `uc _dst -> -> 4 `i `uc _dst &U _len ]
"174
[; ;mrc522.c: 174:     if ((status != 0) || (len != 0x90)) { status = 2; }
[e $ ! || != -> _status `i -> 0 `i != _len -> -> 144 `i `ui 182  ]
{
[e = _status -> -> 2 `i `uc ]
}
[e :U 182 ]
"175
[; ;mrc522.c: 175:     return status;
[e ) _status ]
[e $UE 181  ]
"176
[; ;mrc522.c: 176: }
[e :UE 181 ]
}
"183
[; ;mrc522.c: 183: uint8_t MRCWrite(uint8_t baddr, uint8_t *src)
[v _MRCWrite `(uc ~T0 @X0 1 ef2`uc`*uc ]
"184
[; ;mrc522.c: 184: {
{
[e :U _MRCWrite ]
"183
[; ;mrc522.c: 183: uint8_t MRCWrite(uint8_t baddr, uint8_t *src)
[v _baddr `uc ~T0 @X0 1 r1 ]
[v _src `*uc ~T0 @X0 1 r2 ]
"184
[; ;mrc522.c: 184: {
[f ]
"185
[; ;mrc522.c: 185:     uint8_t status;
[v _status `uc ~T0 @X0 1 a ]
"186
[; ;mrc522.c: 186:     unsigned recvbits;
[v _recvbits `ui ~T0 @X0 1 a ]
"187
[; ;mrc522.c: 187:     uint8_t i;
[v _i `uc ~T0 @X0 1 a ]
"188
[; ;mrc522.c: 188:  uint8_t buff[18];
[v _buff `uc ~T0 @X0 -> 18 `i a ]
"189
[; ;mrc522.c: 189:     buff[0] = 0xA0;
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 160 `i `uc ]
"190
[; ;mrc522.c: 190:     buff[1] = baddr;
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux _baddr ]
"191
[; ;mrc522.c: 191:     MRCRunCRC(buff, 2, &buff[2]);
[e ( _MRCRunCRC (3 , , &U _buff -> -> 2 `i `uc &U *U + &U _buff * -> -> -> 2 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
"192
[; ;mrc522.c: 192:     status = MRCToCard(0x0C, buff, 4, buff, &recvbits);
[e = _status ( _MRCToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 4 `i `uc &U _buff &U _recvbits ]
"193
[; ;mrc522.c: 193:     if ((status != 0) || (recvbits != 4) || ((buff[0] & 0x0F) != 0x0A))
[e $ ! || || != -> _status `i -> 0 `i != _recvbits -> -> 4 `i `ui != & -> *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux `i -> 15 `i -> 10 `i 184  ]
"194
[; ;mrc522.c: 194:         status = 2;
[e = _status -> -> 2 `i `uc ]
[e :U 184 ]
"195
[; ;mrc522.c: 195:     if (status == 0)
[e $ ! == -> _status `i -> 0 `i 185  ]
"196
[; ;mrc522.c: 196:     {
{
"197
[; ;mrc522.c: 197:         for (i=0; i<16; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 186  ]
[e $U 187  ]
[e :U 186 ]
"198
[; ;mrc522.c: 198:             buff[i] = *(src+i);
[e = *U + &U _buff * -> _i `ux -> -> # *U &U _buff `ui `ux *U + _src * -> -> _i `i `x -> -> # *U _src `i `x ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 186  ]
[e :U 187 ]
}
"200
[; ;mrc522.c: 200:         MRCRunCRC(buff, 16, &buff[16]);
[e ( _MRCRunCRC (3 , , &U _buff -> -> 16 `i `uc &U *U + &U _buff * -> -> -> 16 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
"201
[; ;mrc522.c: 201:         status = MRCToCard(0x0C, buff, 18, buff, &recvbits);
[e = _status ( _MRCToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 18 `i `uc &U _buff &U _recvbits ]
"202
[; ;mrc522.c: 202:         if ((status != 0) || (recvbits != 4) || ((buff[0] & 0x0F) != 0x0A))
[e $ ! || || != -> _status `i -> 0 `i != _recvbits -> -> 4 `i `ui != & -> *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux `i -> 15 `i -> 10 `i 189  ]
"203
[; ;mrc522.c: 203:           status = 2;
[e = _status -> -> 2 `i `uc ]
[e :U 189 ]
"204
[; ;mrc522.c: 204:     }
}
[e :U 185 ]
"205
[; ;mrc522.c: 205:     return status;
[e ) _status ]
[e $UE 183  ]
"206
[; ;mrc522.c: 206: }
[e :UE 183 ]
}
"213
[; ;mrc522.c: 213: void MRCEncodeValue(int32_t value, uint8_t baddr, uint8_t *dst)
[v _MRCEncodeValue `(v ~T0 @X0 1 ef3`l`uc`*uc ]
"214
[; ;mrc522.c: 214: {
{
[e :U _MRCEncodeValue ]
"213
[; ;mrc522.c: 213: void MRCEncodeValue(int32_t value, uint8_t baddr, uint8_t *dst)
[v _value `l ~T0 @X0 1 r1 ]
[v _baddr `uc ~T0 @X0 1 r2 ]
[v _dst `*uc ~T0 @X0 1 r3 ]
"214
[; ;mrc522.c: 214: {
[f ]
"215
[; ;mrc522.c: 215:     uint8_t res;
[v _res `uc ~T0 @X0 1 a ]
"216
[; ;mrc522.c: 216:     res = (uint8_t) value;
[e = _res -> _value `uc ]
"217
[; ;mrc522.c: 217:     dst[0] = res;
[e = *U + _dst * -> -> 0 `i `x -> -> # *U _dst `i `x _res ]
"218
[; ;mrc522.c: 218:     dst[4] = ~res;
[e = *U + _dst * -> -> 4 `i `x -> -> # *U _dst `i `x -> ~ -> _res `i `uc ]
"219
[; ;mrc522.c: 219:     dst[8] = res;
[e = *U + _dst * -> -> 8 `i `x -> -> # *U _dst `i `x _res ]
"220
[; ;mrc522.c: 220:     res = (uint8_t) (value>>8);
[e = _res -> >> _value -> 8 `i `uc ]
"221
[; ;mrc522.c: 221:     dst[1] = res;
[e = *U + _dst * -> -> 1 `i `x -> -> # *U _dst `i `x _res ]
"222
[; ;mrc522.c: 222:     dst[5] = ~res;
[e = *U + _dst * -> -> 5 `i `x -> -> # *U _dst `i `x -> ~ -> _res `i `uc ]
"223
[; ;mrc522.c: 223:     dst[9] = res;
[e = *U + _dst * -> -> 9 `i `x -> -> # *U _dst `i `x _res ]
"224
[; ;mrc522.c: 224:     res = (uint8_t) (value>>16);
[e = _res -> >> _value -> 16 `i `uc ]
"225
[; ;mrc522.c: 225:     dst[2] = res;
[e = *U + _dst * -> -> 2 `i `x -> -> # *U _dst `i `x _res ]
"226
[; ;mrc522.c: 226:     dst[6] = ~res;
[e = *U + _dst * -> -> 6 `i `x -> -> # *U _dst `i `x -> ~ -> _res `i `uc ]
"227
[; ;mrc522.c: 227:     dst[10] = res;
[e = *U + _dst * -> -> 10 `i `x -> -> # *U _dst `i `x _res ]
"228
[; ;mrc522.c: 228:     res = (uint8_t) (value>>24);
[e = _res -> >> _value -> 24 `i `uc ]
"229
[; ;mrc522.c: 229:     dst[3] = res;
[e = *U + _dst * -> -> 3 `i `x -> -> # *U _dst `i `x _res ]
"230
[; ;mrc522.c: 230:     dst[7] = ~res;
[e = *U + _dst * -> -> 7 `i `x -> -> # *U _dst `i `x -> ~ -> _res `i `uc ]
"231
[; ;mrc522.c: 231:     dst[11] = res;
[e = *U + _dst * -> -> 11 `i `x -> -> # *U _dst `i `x _res ]
"232
[; ;mrc522.c: 232:     dst[12] = baddr;
[e = *U + _dst * -> -> 12 `i `x -> -> # *U _dst `i `x _baddr ]
"233
[; ;mrc522.c: 233:     dst[13] = ~baddr;
[e = *U + _dst * -> -> 13 `i `x -> -> # *U _dst `i `x -> ~ -> _baddr `i `uc ]
"234
[; ;mrc522.c: 234:     dst[14] = baddr;
[e = *U + _dst * -> -> 14 `i `x -> -> # *U _dst `i `x _baddr ]
"235
[; ;mrc522.c: 235:     dst[15] = ~baddr;
[e = *U + _dst * -> -> 15 `i `x -> -> # *U _dst `i `x -> ~ -> _baddr `i `uc ]
"236
[; ;mrc522.c: 236: }
[e :UE 190 ]
}
"241
[; ;mrc522.c: 241: int32_t MRCDecodeValue(uint8_t *src)
[v _MRCDecodeValue `(l ~T0 @X0 1 ef1`*uc ]
"242
[; ;mrc522.c: 242: {
{
[e :U _MRCDecodeValue ]
"241
[; ;mrc522.c: 241: int32_t MRCDecodeValue(uint8_t *src)
[v _src `*uc ~T0 @X0 1 r1 ]
"242
[; ;mrc522.c: 242: {
[f ]
"243
[; ;mrc522.c: 243:     int32_t res;
[v _res `l ~T0 @X0 1 a ]
"244
[; ;mrc522.c: 244:     res = src[3];
[e = _res -> *U + _src * -> -> 3 `i `x -> -> # *U _src `i `x `l ]
"245
[; ;mrc522.c: 245:     res = res << 8;
[e = _res << _res -> 8 `i ]
"246
[; ;mrc522.c: 246:     res = res | src[2];
[e = _res | _res -> *U + _src * -> -> 2 `i `x -> -> # *U _src `i `x `l ]
"247
[; ;mrc522.c: 247:     res = res << 8;
[e = _res << _res -> 8 `i ]
"248
[; ;mrc522.c: 248:     res = res | src[1];
[e = _res | _res -> *U + _src * -> -> 1 `i `x -> -> # *U _src `i `x `l ]
"249
[; ;mrc522.c: 249:     res = res << 8;
[e = _res << _res -> 8 `i ]
"250
[; ;mrc522.c: 250:     res = res | src[0];
[e = _res | _res -> *U + _src * -> -> 0 `i `x -> -> # *U _src `i `x `l ]
"251
[; ;mrc522.c: 251:     return res;
[e ) _res ]
[e $UE 191  ]
"252
[; ;mrc522.c: 252: }
[e :UE 191 ]
}
"259
[; ;mrc522.c: 259: uint8_t MRCUpdateValue(uint8_t baddr, uint8_t cmd, uint8_t step)
[v _MRCUpdateValue `(uc ~T0 @X0 1 ef3`uc`uc`uc ]
"260
[; ;mrc522.c: 260: {
{
[e :U _MRCUpdateValue ]
"259
[; ;mrc522.c: 259: uint8_t MRCUpdateValue(uint8_t baddr, uint8_t cmd, uint8_t step)
[v _baddr `uc ~T0 @X0 1 r1 ]
[v _cmd `uc ~T0 @X0 1 r2 ]
[v _step `uc ~T0 @X0 1 r3 ]
"260
[; ;mrc522.c: 260: {
[f ]
"261
[; ;mrc522.c: 261:     uint8_t status;
[v _status `uc ~T0 @X0 1 a ]
"262
[; ;mrc522.c: 262:     unsigned recvbits;
[v _recvbits `ui ~T0 @X0 1 a ]
"263
[; ;mrc522.c: 263:     uint8_t i;
[v _i `uc ~T0 @X0 1 a ]
"264
[; ;mrc522.c: 264:  uint8_t buff[8];
[v _buff `uc ~T0 @X0 -> 8 `i a ]
"265
[; ;mrc522.c: 265:     buff[0] = cmd;
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux _cmd ]
"266
[; ;mrc522.c: 266:     buff[1] = baddr;
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux _baddr ]
"267
[; ;mrc522.c: 267:     MRCRunCRC(buff, 2, &buff[2]);
[e ( _MRCRunCRC (3 , , &U _buff -> -> 2 `i `uc &U *U + &U _buff * -> -> -> 2 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
"268
[; ;mrc522.c: 268:     status = MRCToCard(0x0C, buff, 4, buff, &recvbits);
[e = _status ( _MRCToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 4 `i `uc &U _buff &U _recvbits ]
"269
[; ;mrc522.c: 269:     if ((status != 0) || (recvbits != 4) || ((buff[0] & 0x0F) != 0x0A))
[e $ ! || || != -> _status `i -> 0 `i != _recvbits -> -> 4 `i `ui != & -> *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux `i -> 15 `i -> 10 `i 193  ]
"270
[; ;mrc522.c: 270:         status = 2;
[e = _status -> -> 2 `i `uc ]
[e :U 193 ]
"271
[; ;mrc522.c: 271:     if (status == 0)
[e $ ! == -> _status `i -> 0 `i 194  ]
"272
[; ;mrc522.c: 272:     {
{
"273
[; ;mrc522.c: 273:         buff[0] = step;
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux _step ]
"274
[; ;mrc522.c: 274:         buff[1] = 0;
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 0 `i `uc ]
"275
[; ;mrc522.c: 275:         buff[2] = 0;
[e = *U + &U _buff * -> -> -> 2 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 0 `i `uc ]
"276
[; ;mrc522.c: 276:         buff[3] = 0;
[e = *U + &U _buff * -> -> -> 3 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 0 `i `uc ]
"278
[; ;mrc522.c: 278:         MRCRunCRC(buff, 4, &buff[4]);
[e ( _MRCRunCRC (3 , , &U _buff -> -> 4 `i `uc &U *U + &U _buff * -> -> -> 4 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
"279
[; ;mrc522.c: 279:         MRCToCard(0x0C, buff, 6, buff, &recvbits);
[e ( _MRCToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 6 `i `uc &U _buff &U _recvbits ]
"280
[; ;mrc522.c: 280:         buff[0] = 0xB0;
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 176 `i `uc ]
"281
[; ;mrc522.c: 281:         buff[1] = baddr;
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux _baddr ]
"282
[; ;mrc522.c: 282:         MRCRunCRC(buff, 2, &buff[2]);
[e ( _MRCRunCRC (3 , , &U _buff -> -> 2 `i `uc &U *U + &U _buff * -> -> -> 2 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
"283
[; ;mrc522.c: 283:         status = MRCToCard(0x0C, buff, 4, buff, &recvbits);
[e = _status ( _MRCToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 4 `i `uc &U _buff &U _recvbits ]
"284
[; ;mrc522.c: 284:         if ((status != 0) || (recvbits != 4) || ((buff[0] & 0x0F) != 0x0A))
[e $ ! || || != -> _status `i -> 0 `i != _recvbits -> -> 4 `i `ui != & -> *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux `i -> 15 `i -> 10 `i 195  ]
"285
[; ;mrc522.c: 285:             status = 2;
[e = _status -> -> 2 `i `uc ]
[e :U 195 ]
"286
[; ;mrc522.c: 286:     }
}
[e :U 194 ]
"287
[; ;mrc522.c: 287:     return status;
[e ) _status ]
[e $UE 192  ]
"288
[; ;mrc522.c: 288: }
[e :UE 192 ]
}
"292
[; ;mrc522.c: 292: void MRCInit(void)
[v _MRCInit `(v ~T0 @X0 1 ef ]
"293
[; ;mrc522.c: 293: {
{
[e :U _MRCInit ]
[f ]
"294
[; ;mrc522.c: 294:     PORTAbits.RA5 = 1;
[e = . . _PORTAbits 0 5 -> -> 1 `i `uc ]
"295
[; ;mrc522.c: 295:     TRISAbits.TRISA5 = 0;
[e = . . _TRISAbits 0 5 -> -> 0 `i `uc ]
"296
[; ;mrc522.c: 296:     __nop();
[e ( ___nop ..  ]
"297
[; ;mrc522.c: 297:     MRCWriteReg(0x01, 0x0F);
[e ( _MRCWriteReg (2 , -> -> 1 `i `uc -> -> 15 `i `uc ]
"298
[; ;mrc522.c: 298:     MRCWriteReg(0x2A, 0x8D);
[e ( _MRCWriteReg (2 , -> -> 42 `i `uc -> -> 141 `i `uc ]
"299
[; ;mrc522.c: 299:     MRCWriteReg(0x2B, 0x3E);
[e ( _MRCWriteReg (2 , -> -> 43 `i `uc -> -> 62 `i `uc ]
"300
[; ;mrc522.c: 300:     MRCWriteReg(0x2D, 30);
[e ( _MRCWriteReg (2 , -> -> 45 `i `uc -> -> 30 `i `uc ]
"301
[; ;mrc522.c: 301:     MRCWriteReg(0x2C, 0);
[e ( _MRCWriteReg (2 , -> -> 44 `i `uc -> -> 0 `i `uc ]
"302
[; ;mrc522.c: 302:     MRCWriteReg(0x15, 0x40);
[e ( _MRCWriteReg (2 , -> -> 21 `i `uc -> -> 64 `i `uc ]
"303
[; ;mrc522.c: 303:     MRCWriteReg(0x11, 0x3D);
[e ( _MRCWriteReg (2 , -> -> 17 `i `uc -> -> 61 `i `uc ]
"304
[; ;mrc522.c: 304:     MRCWriteReg(0x26, 0x70);
[e ( _MRCWriteReg (2 , -> -> 38 `i `uc -> -> 112 `i `uc ]
"305
[; ;mrc522.c: 305:     MRCClearBit(0x14, 0x03) ;
[e ( _MRCClearBit (2 , -> -> 20 `i `uc -> -> 3 `i `uc ]
"306
[; ;mrc522.c: 306:     MRCSetBit(0x14, 0x03);
[e ( _MRCSetBit (2 , -> -> 20 `i `uc -> -> 3 `i `uc ]
"307
[; ;mrc522.c: 307: }
[e :UE 196 ]
}
"318
[; ;mrc522.c: 318: uint8_t MRCRequest(uint8_t cmd, uint8_t *dst)
[v _MRCRequest `(uc ~T0 @X0 1 ef2`uc`*uc ]
"319
[; ;mrc522.c: 319: {
{
[e :U _MRCRequest ]
"318
[; ;mrc522.c: 318: uint8_t MRCRequest(uint8_t cmd, uint8_t *dst)
[v _cmd `uc ~T0 @X0 1 r1 ]
[v _dst `*uc ~T0 @X0 1 r2 ]
"319
[; ;mrc522.c: 319: {
[f ]
"320
[; ;mrc522.c: 320:     uint8_t status;
[v _status `uc ~T0 @X0 1 a ]
"321
[; ;mrc522.c: 321:     unsigned lenbits;
[v _lenbits `ui ~T0 @X0 1 a ]
"322
[; ;mrc522.c: 322:     MRCWriteReg(0x0D, 0x07);
[e ( _MRCWriteReg (2 , -> -> 13 `i `uc -> -> 7 `i `uc ]
"323
[; ;mrc522.c: 323:     dst[0] = cmd;
[e = *U + _dst * -> -> 0 `i `x -> -> # *U _dst `i `x _cmd ]
"324
[; ;mrc522.c: 324:     status = MRCToCard(0x0C, dst, 1, dst, &lenbits);
[e = _status ( _MRCToCard (4 , , , , -> -> 12 `i `uc _dst -> -> 1 `i `uc _dst &U _lenbits ]
"325
[; ;mrc522.c: 325:     if ((status != 0) || (lenbits != 0x10))
[e $ ! || != -> _status `i -> 0 `i != _lenbits -> -> 16 `i `ui 198  ]
"326
[; ;mrc522.c: 326:         status = 2;
[e = _status -> -> 2 `i `uc ]
[e :U 198 ]
"327
[; ;mrc522.c: 327:     return status;
[e ) _status ]
[e $UE 197  ]
"328
[; ;mrc522.c: 328: }
[e :UE 197 ]
}
"333
[; ;mrc522.c: 333: uint8_t MRCAntiColl(uint8_t *sernum)
[v _MRCAntiColl `(uc ~T0 @X0 1 ef1`*uc ]
"334
[; ;mrc522.c: 334: {
{
[e :U _MRCAntiColl ]
"333
[; ;mrc522.c: 333: uint8_t MRCAntiColl(uint8_t *sernum)
[v _sernum `*uc ~T0 @X0 1 r1 ]
"334
[; ;mrc522.c: 334: {
[f ]
"335
[; ;mrc522.c: 335:     uint8_t status;
[v _status `uc ~T0 @X0 1 a ]
"336
[; ;mrc522.c: 336:     uint8_t i;
[v _i `uc ~T0 @X0 1 a ]
"337
[; ;mrc522.c: 337:     uint8_t sernumcheck = 0;
[v _sernumcheck `uc ~T0 @X0 1 a ]
[e = _sernumcheck -> -> 0 `i `uc ]
"338
[; ;mrc522.c: 338:     unsigned unlen;
[v _unlen `ui ~T0 @X0 1 a ]
"339
[; ;mrc522.c: 339:     MRCWriteReg(0x0D, 0x00);
[e ( _MRCWriteReg (2 , -> -> 13 `i `uc -> -> 0 `i `uc ]
"340
[; ;mrc522.c: 340:     sernum[0] = 0x93;
[e = *U + _sernum * -> -> 0 `i `x -> -> # *U _sernum `i `x -> -> 147 `i `uc ]
"341
[; ;mrc522.c: 341:     sernum[1] = 0x20;
[e = *U + _sernum * -> -> 1 `i `x -> -> # *U _sernum `i `x -> -> 32 `i `uc ]
"342
[; ;mrc522.c: 342:     MRCClearBit(0x08, 0x08);
[e ( _MRCClearBit (2 , -> -> 8 `i `uc -> -> 8 `i `uc ]
"343
[; ;mrc522.c: 343:     status = MRCToCard(0x0C, sernum, 2, sernum, &unlen);
[e = _status ( _MRCToCard (4 , , , , -> -> 12 `i `uc _sernum -> -> 2 `i `uc _sernum &U _unlen ]
"344
[; ;mrc522.c: 344:     if(status == 0)
[e $ ! == -> _status `i -> 0 `i 200  ]
"345
[; ;mrc522.c: 345:     {
{
"346
[; ;mrc522.c: 346:         for(i=0; i < 4; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 201  ]
[e $U 202  ]
[e :U 201 ]
"347
[; ;mrc522.c: 347:             sernumcheck ^= sernum[i];
[e =^ _sernumcheck -> *U + _sernum * -> _i `ux -> -> # *U _sernum `ui `ux `uc ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 201  ]
[e :U 202 ]
}
"348
[; ;mrc522.c: 348:         if(sernumcheck != sernum[4])
[e $ ! != -> _sernumcheck `i -> *U + _sernum * -> -> 4 `i `x -> -> # *U _sernum `i `x `i 204  ]
"349
[; ;mrc522.c: 349:             status = 2;
[e = _status -> -> 2 `i `uc ]
[e :U 204 ]
"350
[; ;mrc522.c: 350:     }
}
[e :U 200 ]
"351
[; ;mrc522.c: 351:     return status;
[e ) _status ]
[e $UE 199  ]
"352
[; ;mrc522.c: 352: }
[e :UE 199 ]
}
"358
[; ;mrc522.c: 358: uint8_t MRCSelectTag(uint8_t *sernum)
[v _MRCSelectTag `(uc ~T0 @X0 1 ef1`*uc ]
"359
[; ;mrc522.c: 359: {
{
[e :U _MRCSelectTag ]
"358
[; ;mrc522.c: 358: uint8_t MRCSelectTag(uint8_t *sernum)
[v _sernum `*uc ~T0 @X0 1 r1 ]
"359
[; ;mrc522.c: 359: {
[f ]
"360
[; ;mrc522.c: 360:     uint8_t i;
[v _i `uc ~T0 @X0 1 a ]
"361
[; ;mrc522.c: 361:     uint8_t status;
[v _status `uc ~T0 @X0 1 a ]
"362
[; ;mrc522.c: 362:     uint8_t size;
[v _size `uc ~T0 @X0 1 a ]
"363
[; ;mrc522.c: 363:     unsigned recvbits;
[v _recvbits `ui ~T0 @X0 1 a ]
"364
[; ;mrc522.c: 364:     uint8_t buffer[9];
[v _buffer `uc ~T0 @X0 -> 9 `i a ]
"365
[; ;mrc522.c: 365:     buffer[0] = 0x93;
[e = *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 147 `i `uc ]
"366
[; ;mrc522.c: 366:     buffer[1] = 0x70;
[e = *U + &U _buffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux -> -> 112 `i `uc ]
"367
[; ;mrc522.c: 367:     for(i=2; i < 7; i++)
{
[e = _i -> -> 2 `i `uc ]
[e $ < -> _i `i -> 7 `i 206  ]
[e $U 207  ]
[e :U 206 ]
"368
[; ;mrc522.c: 368:         buffer[i] = *sernum++;
[e = *U + &U _buffer * -> _i `ux -> -> # *U &U _buffer `ui `ux *U ++ _sernum * -> -> 1 `i `x -> -> # *U _sernum `i `x ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 7 `i 206  ]
[e :U 207 ]
}
"369
[; ;mrc522.c: 369:     MRCRunCRC(buffer, 7, &buffer[7]);
[e ( _MRCRunCRC (3 , , &U _buffer -> -> 7 `i `uc &U *U + &U _buffer * -> -> -> 7 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
"370
[; ;mrc522.c: 370:     status = MRCToCard(0x0C, buffer, 9, buffer, &recvbits);
[e = _status ( _MRCToCard (4 , , , , -> -> 12 `i `uc &U _buffer -> -> 9 `i `uc &U _buffer &U _recvbits ]
"371
[; ;mrc522.c: 371:     if((status == 0) && (recvbits == 0x18))
[e $ ! && == -> _status `i -> 0 `i == _recvbits -> -> 24 `i `ui 209  ]
"372
[; ;mrc522.c: 372:         size = buffer[0];
[e = _size *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux ]
[e $U 210  ]
"373
[; ;mrc522.c: 373:     else
[e :U 209 ]
"374
[; ;mrc522.c: 374:         size = 0;
[e = _size -> -> 0 `i `uc ]
[e :U 210 ]
"375
[; ;mrc522.c: 375:     return size;
[e ) _size ]
[e $UE 205  ]
"376
[; ;mrc522.c: 376: }
[e :UE 205 ]
}
"386
[; ;mrc522.c: 386: uint8_t MRCAuth(uint8_t authmode, uint8_t baddr, uint8_t *key, uint8_t *src)
[v _MRCAuth `(uc ~T0 @X0 1 ef4`uc`uc`*uc`*uc ]
"387
[; ;mrc522.c: 387: {
{
[e :U _MRCAuth ]
"386
[; ;mrc522.c: 386: uint8_t MRCAuth(uint8_t authmode, uint8_t baddr, uint8_t *key, uint8_t *src)
[v _authmode `uc ~T0 @X0 1 r1 ]
[v _baddr `uc ~T0 @X0 1 r2 ]
[v _key `*uc ~T0 @X0 1 r3 ]
[v _src `*uc ~T0 @X0 1 r4 ]
"387
[; ;mrc522.c: 387: {
[f ]
"388
[; ;mrc522.c: 388:     uint8_t status;
[v _status `uc ~T0 @X0 1 a ]
"389
[; ;mrc522.c: 389:     unsigned recvbits;
[v _recvbits `ui ~T0 @X0 1 a ]
"390
[; ;mrc522.c: 390:     uint8_t i;
[v _i `uc ~T0 @X0 1 a ]
"391
[; ;mrc522.c: 391:  uint8_t buff[12];
[v _buff `uc ~T0 @X0 -> 12 `i a ]
"393
[; ;mrc522.c: 393:     buff[0] = authmode;
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux _authmode ]
"394
[; ;mrc522.c: 394:     buff[1] = baddr;
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux _baddr ]
"395
[; ;mrc522.c: 395:     for (i=0; i<6; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 212  ]
[e $U 213  ]
[e :U 212 ]
"396
[; ;mrc522.c: 396:         buff[i+2] = *(key+i);
[e = *U + &U _buff * -> -> + -> _i `i -> 2 `i `ui `ux -> -> # *U &U _buff `ui `ux *U + _key * -> -> _i `i `x -> -> # *U _key `i `x ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 212  ]
[e :U 213 ]
}
"397
[; ;mrc522.c: 397:     for (i=0; i<4; i++)
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 4 `i 215  ]
[e $U 216  ]
[e :U 215 ]
"398
[; ;mrc522.c: 398:         buff[i+8] = *(src+i);
[e = *U + &U _buff * -> -> + -> _i `i -> 8 `i `ui `ux -> -> # *U &U _buff `ui `ux *U + _src * -> -> _i `i `x -> -> # *U _src `i `x ]
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 4 `i 215  ]
[e :U 216 ]
}
"399
[; ;mrc522.c: 399:     status = MRCToCard(0x0E, buff, 12, buff, &recvbits);
[e = _status ( _MRCToCard (4 , , , , -> -> 14 `i `uc &U _buff -> -> 12 `i `uc &U _buff &U _recvbits ]
"400
[; ;mrc522.c: 400:     if ((status != 0) || (!(MRCReadReg(0x08)&0x08)))
[e $ ! || != -> _status `i -> 0 `i ! != & -> ( _MRCReadReg (1 -> -> 8 `i `uc `i -> 8 `i -> 0 `i 218  ]
"401
[; ;mrc522.c: 401:         status = 2;
[e = _status -> -> 2 `i `uc ]
[e :U 218 ]
"402
[; ;mrc522.c: 402:     return status;
[e ) _status ]
[e $UE 211  ]
"403
[; ;mrc522.c: 403: }
[e :UE 211 ]
}
"408
[; ;mrc522.c: 408: void MRCHalt(void)
[v _MRCHalt `(v ~T0 @X0 1 ef ]
"409
[; ;mrc522.c: 409: {
{
[e :U _MRCHalt ]
[f ]
"410
[; ;mrc522.c: 410:     unsigned len;
[v _len `ui ~T0 @X0 1 a ]
"411
[; ;mrc522.c: 411:     uint8_t buff[4];
[v _buff `uc ~T0 @X0 -> 4 `i a ]
"412
[; ;mrc522.c: 412:     buff[0] = 0x50;
[e = *U + &U _buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 80 `i `uc ]
"413
[; ;mrc522.c: 413:     buff[1] = 0;
[e = *U + &U _buff * -> -> -> 1 `i `ui `ux -> -> # *U &U _buff `ui `ux -> -> 0 `i `uc ]
"414
[; ;mrc522.c: 414:     MRCRunCRC( buff, 2, &buff[2] );
[e ( _MRCRunCRC (3 , , &U _buff -> -> 2 `i `uc &U *U + &U _buff * -> -> -> 2 `i `ui `ux -> -> # *U &U _buff `ui `ux ]
"415
[; ;mrc522.c: 415:     MRCClearBit( 0x08, 0x80 );
[e ( _MRCClearBit (2 , -> -> 8 `i `uc -> -> 128 `i `uc ]
"416
[; ;mrc522.c: 416:     MRCToCard( 0x0C, buff, 4, buff, &len );
[e ( _MRCToCard (4 , , , , -> -> 12 `i `uc &U _buff -> -> 4 `i `uc &U _buff &U _len ]
"417
[; ;mrc522.c: 417:     MRCClearBit( 0x08, 0x08 );
[e ( _MRCClearBit (2 , -> -> 8 `i `uc -> -> 8 `i `uc ]
"418
[; ;mrc522.c: 418: }
[e :UE 219 ]
}
